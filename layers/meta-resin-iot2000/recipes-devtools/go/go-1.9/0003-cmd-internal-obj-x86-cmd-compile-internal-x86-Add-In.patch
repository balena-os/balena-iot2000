From 235f5fb7d83dc9f4f896e7d469665162bae91b55 Mon Sep 17 00:00:00 2001
From: Jan Kiszka <jan.kiszka@siemens.com>
Date: Sun, 30 Jul 2017 09:45:41 +0200
Subject: [PATCH 3/3] cmd/internal/obj/x86, cmd/compile/internal/x86: Add Intel
 Quark workaround

The Quark erratum #24 requires us to leave out any LOCK prefix from
instructions that may cause segfaults. The GNU assembler has a special
switch for that. We can add another GO386 mode: quark. It's identical to
387, except that it tells the assembler to not generate any LOCK prefix.

Signed-off-by: Jan Kiszka <jan.kiszka@siemens.com>

Signed-off-by: Florin Sarbu <florin@resin.io>
---
 src/cmd/compile/internal/x86/galign.go | 2 +-
 src/cmd/internal/obj/x86/asm6.go       | 7 +++++++
 2 files changed, 8 insertions(+), 1 deletion(-)

diff --git a/src/cmd/compile/internal/x86/galign.go b/src/cmd/compile/internal/x86/galign.go
index 56cc6c637d..33b15b0f82 100644
--- a/src/cmd/compile/internal/x86/galign.go
+++ b/src/cmd/compile/internal/x86/galign.go
@@ -16,7 +16,7 @@ func Init(arch *gc.Arch) {
 	arch.LinkArch = &x86.Link386
 	arch.REGSP = x86.REGSP
 	switch v := objabi.GO386; v {
-	case "387":
+	case "387", "quark":
 		arch.Use387 = true
 		arch.SSAGenValue = ssaGenValue387
 		arch.SSAGenBlock = ssaGenBlock387
diff --git a/src/cmd/internal/obj/x86/asm6.go b/src/cmd/internal/obj/x86/asm6.go
index bcf9318e2e..2e797a4bab 100644
--- a/src/cmd/internal/obj/x86/asm6.go
+++ b/src/cmd/internal/obj/x86/asm6.go
@@ -1965,6 +1965,8 @@ func span6(ctxt *obj.Link, s *obj.LSym, newprog obj.ProgAlloc) {
 	}
 }
 
+var isQuark = (objabi.GO386 == "quark")
+
 func instinit(ctxt *obj.Link) {
 	if ycover[0] != 0 {
 		// Already initialized; stop now.
@@ -1982,6 +1984,11 @@ func instinit(ctxt *obj.Link) {
 
 	for i := 1; optab[i].as != 0; i++ {
 		c := optab[i].as
+
+		if isQuark && c == ALOCK {
+			optab[i].op = [23]uint8{}
+		}
+
 		if opindex[c&obj.AMask] != nil {
 			ctxt.Diag("phase error in optab: %d (%v)", i, c)
 		}
-- 
2.18.0

